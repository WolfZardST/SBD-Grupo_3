DROP SCHEMA IF EXISTS APOYAME;

CREATE SCHEMA apoyame;

USE apoyame;

CREATE TABLE USUARIO(
ID_USUARIO TINYINT NOT NULL AUTO_INCREMENT,
NICKNAME VARCHAR(50) UNIQUE NOT NULL,
NOMBRE VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50) UNIQUE NOT NULL,
CONTRASEÑA VARCHAR(50) NOT NULL CONSTRAINT pass CHECK(CONTRASEÑA LIKE '______%'),
PRIMARY KEY (ID_USUARIO)
);

CREATE TABLE GRUPO(
ID_GRUPO TINYINT NOT NULL AUTO_INCREMENT,
NOMBRE VARCHAR(50) UNIQUE NOT NULL,
DESCRIPCION VARCHAR(300) NOT NULL,
CATEGORIA VARCHAR(50) NOT NULL,
PRIMARY KEY (ID_GRUPO)
);

CREATE TABLE TEMA(
ID_TEMA TINYINT NOT NULL AUTO_INCREMENT,
NOMBRE VARCHAR(50) NOT NULL,
F_CREACION DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
NUM_ENTRADAS INT NOT NULL DEFAULT 0,
ID_CREADOR TINYINT NOT NULL,
ID_GRUPO TINYINT NOT NULL,
PRIMARY KEY (ID_TEMA),
FOREIGN KEY (ID_CREADOR) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY (ID_GRUPO) REFERENCES GRUPO(ID_GRUPO)
);

CREATE TABLE ENTRADA (
ID_ENTRADA TINYINT NOT NULL AUTO_INCREMENT,
ID_AUTOR TINYINT NOT NULL,
FECHA_HORA DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
ID_TEMA TINYINT NOT NULL,
TEXTO TEXT NOT NULL,
PRIMARY KEY(ID_ENTRADA),
FOREIGN KEY(ID_TEMA) REFERENCES TEMA(ID_TEMA) ON DELETE CASCADE,
FOREIGN KEY(ID_AUTOR) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE REUNIONVIRTUAL (
ID_REUNION TINYINT NOT NULL AUTO_INCREMENT,
ID_ORGANIZADOR TINYINT NOT NULL,
ID_TEMA TINYINT NOT NULL,
FECHA_HORA DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
PLATAFORMA VARCHAR(50) NOT NULL,
PRIMARY KEY(ID_REUNION),
FOREIGN KEY(ID_ORGANIZADOR) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY(ID_TEMA) REFERENCES TEMA(ID_TEMA) ON DELETE CASCADE
);

CREATE TABLE REUNIONPRESENCIAL (
ID_REUNION TINYINT NOT NULL AUTO_INCREMENT,
ID_ORGANIZADOR TINYINT NOT NULL,
ID_TEMA TINYINT NOT NULL,
FECHA_HORA DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
UBICACION VARCHAR(50) NOT NULL,
PRIMARY KEY(ID_REUNION),
FOREIGN KEY(ID_ORGANIZADOR) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY(ID_TEMA) REFERENCES TEMA(ID_TEMA) ON DELETE CASCADE
);

CREATE TABLE ASISTENCIAREUNIONVIRTUAL (
ID_ASISTENCIA TINYINT NOT NULL AUTO_INCREMENT,
ID_ASISTENTE TINYINT NOT NULL,
ID_REUNION TINYINT NOT NULL,
PRIMARY KEY(ID_ASISTENCIA),
FOREIGN KEY(ID_REUNION) REFERENCES REUNIONVIRTUAL(ID_REUNION) ON DELETE CASCADE,
FOREIGN KEY(ID_ASISTENTE) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE ASISTENCIAREUNIONPRESENCIAL (
ID_ASISTENCIA TINYINT NOT NULL AUTO_INCREMENT,
ID_ASISTENTE TINYINT NOT NULL,
ID_REUNION TINYINT NOT NULL,
PRIMARY KEY(ID_ASISTENCIA),
FOREIGN KEY(ID_REUNION) REFERENCES REUNIONPRESENCIAL(ID_REUNION) ON DELETE CASCADE,
FOREIGN KEY(ID_ASISTENTE) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE MIEMBROGRUPO (
ID_MEMBRESIA TINYINT NOT NULL AUTO_INCREMENT,
ID_USUARIO TINYINT NOT NULL,
ID_GRUPO TINYINT NOT NULL,
ESTADO ENUM('ACTIVO','INACTIVO') NOT NULL DEFAULT 'ACTIVO',
PRIMARY KEY(ID_MEMBRESIA),
FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY(ID_GRUPO) REFERENCES GRUPO(ID_GRUPO)
);

CREATE TABLE CATALOGO (
ID_CATALOGO TINYINT NOT NULL AUTO_INCREMENT,
TITULO_SECCION VARCHAR(50) NOT NULL,
ID_GRUPO TINYINT NOT NULL,
PRIMARY KEY(ID_CATALOGO),
FOREIGN KEY(ID_GRUPO) REFERENCES GRUPO(ID_GRUPO)
);

CREATE TABLE VIDEO (
ID_VIDEO TINYINT NOT NULL AUTO_INCREMENT,
URL TEXT NOT NULL,
TITULO TEXT NOT NULL,
ID_CATALOGO TINYINT NOT NULL,
DESCRIPCION TEXT NOT NULL,
PRIMARY KEY(ID_VIDEO),
FOREIGN KEY(ID_CATALOGO) REFERENCES CATALOGO(ID_CATALOGO)
);

CREATE TABLE ARTICULO (
ID_ARTICULO TINYINT NOT NULL AUTO_INCREMENT,
ID_AUTOR TINYINT NOT NULL,
TITULO TEXT NOT NULL,
ID_CATALOGO TINYINT NOT NULL,
TEXTO LONGTEXT NOT NULL,
PRIMARY KEY(ID_ARTICULO),
FOREIGN KEY(ID_CATALOGO) REFERENCES CATALOGO(ID_CATALOGO),
FOREIGN KEY(ID_AUTOR) REFERENCES USUARIO(ID_USUARIO)
);
